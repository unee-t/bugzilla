diff --git a/Bugzilla/Bug.pm b/Bugzilla/Bug.pm
index 8b4493f85..c190b188d 100644
--- a/Bugzilla/Bug.pm
+++ b/Bugzilla/Bug.pm
@@ -821,13 +821,10 @@ sub create {
                                                    timestamp => $timestamp,
                                                  });
 
-    $dbh->bz_commit_transaction();
-
-    # Because MySQL doesn't support transactions on the fulltext table,
-    # we do this after we've committed the transaction. That way we're
-    # sure we're inserting a good Bug ID.
     $bug->_sync_fulltext( new_bug => 1 );
 
+    $dbh->bz_commit_transaction();
+
     return $bug;
 }
 
@@ -1173,17 +1170,13 @@ sub update {
         delete $user->{bugs_ignored} if $bug_ignored_changed;
     }
 
-    $dbh->bz_commit_transaction();
-
-    # The only problem with this here is that update() is often called
-    # in the middle of a transaction, and if that transaction is rolled
-    # back, this change will *not* be rolled back. As we expect rollbacks
-    # to be extremely rare, that is OK for us.
     $self->_sync_fulltext(
         update_short_desc => $changes->{short_desc},
         update_comments   => $self->{added_comments} || $self->{comment_isprivate}
     );
 
+    $dbh->bz_commit_transaction();
+
     # Remove obsolete internal variables.
     delete $self->{'_old_assigned_to'};
     delete $self->{'_old_qa_contact'};
diff --git a/Bugzilla/DB/Schema/Mysql.pm b/Bugzilla/DB/Schema/Mysql.pm
index 7ff8ade9f..8891d35a9 100644
--- a/Bugzilla/DB/Schema/Mysql.pm
+++ b/Bugzilla/DB/Schema/Mysql.pm
@@ -76,7 +76,7 @@ use constant REVERSE_MAPPING => {
     # as in their db-specific version, so no reverse mapping is needed.
 };
 
-use constant MYISAM_TABLES => qw(bugs_fulltext);
+use constant MYISAM_TABLES => qw();
 
 #------------------------------------------------------------------------------
 sub _initialize {
